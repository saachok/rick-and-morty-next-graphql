@import '../breakpoints';

@mixin center-content {
  display: flex;
  justify-content: center;
  align-items: center;
}

.container {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto auto;
  padding: 1rem 0;
  gap: 1rem;
  position: relative;

  &::before {
    content: '';
    background-image: url('/assets/pages bg/space/green-space-laptop-2.jpg');
    background-size: cover;
    background-position: center center;
    opacity: 0.5;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
  }
}

.info-holder {
  grid-column: 1;
  grid-row: 1;
  @include center-content();

  .info {
    width: 300px;
    height: 200px;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    border-radius: 1rem;
    padding: 1rem;
    background-color: rgb(91, 172, 73);
    color: rgb(239, 242, 235);

    .title {
      font-size: 24px;
      text-align: center;
    }

    .details {
      display: grid;
      grid-template-columns: 1fr;

      .detail {
        font-size: 20px;
      }
    }
  }
}

.grid-holder {
  grid-row: auto;
  @include center-content();
  flex-direction: column;
}

.grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
}

@media (min-width: $sm) {
  .container {
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }

  .info-holder {
    grid-column: 1 / span 2;

    .info {
      width: 350px;
    }
  }

  .grid-holder {
    grid-column: 1 / span 2;
  }

  .grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }
}

@media (min-width: $md) {
  .container {
    grid-template-columns: repeat(3, 1fr);
  }

  .info-holder {
    grid-column: 1 / span 3;

    .info {
      width: 600px;

      .title {
        font-size: 34px;
      }

      .details {
        grid-template-columns: 1fr 2fr;
      }
    }
  }

  .grid-holder {
    grid-column: 1 / span 3;
  }

  .grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: $lg) {
  .container {
    grid-template-columns: repeat(4, 1fr);
  }

  .info-holder {
    grid-column: 2 / span 2;
  }

  .grid-holder {
    grid-column: 1 / span 4;
    .info {
      width: 100%;
    }
  }

  .grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

@media (min-width: $xl) {
  .container {
    grid-template-columns: repeat(5, 1fr);
  }

  .info-holder {
    grid-column: 2 / span 3;
  }

  .grid-holder {
    grid-column: 1 / span 5;
  }
  .grid {
    grid-template-columns: repeat(5, 1fr);
  }
}
